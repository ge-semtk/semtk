<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.5</version>
	</parent>
	<properties>
		<swagger.version>3.0.0</swagger.version>
	</properties>

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.ge.research.semtk</groupId>
	<artifactId>semtk-oss</artifactId>
	<version>2.5.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>SemTK-demo</name>
	<description>Semantics toolkit.  Visual SPARQL and app service layer.</description>
	<url>http://github.com/ge-semtk/semtk</url>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
		<name>Paul Cuddihy</name>
		<email>cuddihy@ge.com</email>
		<organization>GE Research</organization>
		<organizationUrl>https://ge.com/research</organizationUrl>
		</developer>
	</developers>

	<scm>
		<developerConnection>scm:git:https://github.com/ge-semtk/semtk</developerConnection>
  	</scm>

	<distributionManagement>
		<repository>
			<id>sonatype</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
		<snapshotRepository>
			<id>sonatype</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>

                <!-- GE INTERNAL REPOS 
			<repository>
				<id>semtk</id>
				<name>build.GE Artifactory-releases</name>
				<url>https://artifactory.build.ge.com/artifactory/UMKGF</url>
			</repository>
			<snapshotRepository>
				<id>semtk-snapshots</id>
				<name>build.GE Artifactory-snapshots</name>
				<url>https://artifactory.build.ge.com/artifactory/UMKGF-SNAPSHOT</url>
			</snapshotRepository>
		-->

	</distributionManagement>

	<!-- use these plugins only with mvn -DperformRelease=true -->
	<profiles>
		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>3.0.1</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
 					<plugin>  
 						<groupId>org.apache.maven.plugins</groupId>
 						<artifactId>maven-javadoc-plugin</artifactId>
 						<version>3.5.0</version>
 						<executions>
 							<execution>
 								<id>attach-javadocs</id>
 								<goals>
 									<goal>jar</goal>
 								</goals>
								<!-- disable checking -->
								<configuration>
                							<additionalparam>-Xdoclint:none</additionalparam>
            							</configuration>
 							</execution>
 						</executions>
 					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<modules>
		<module>connectionUtils</module>
		<module>sparqlGraphLibrary</module>
		<module>sparqlGraphIngestionService</module>
		<module>sparqlQueryService</module>
		<module>sparqlGraphStatusService</module>
		<module>sparqlGraphResultsService</module>
		<module>standaloneExecutables</module>
		<module>nodeGroupStoreService</module>
		<module>ontologyInfoService</module>
		<module>sparqlExtDispatchService</module>
		<module>nodeGroupExecutionService</module>
		<module>nodeGroupService</module>
		<module>springSecurityLibrary</module>
		<module>springUtilLibrary</module>
		<module>fdcCacheService</module>
		<module>fdcSampleService</module>
		<module>edcQueryGenerationService</module>
		<module>athenaService</module>
		<module>fileStagingService</module>
		<module>utilityService</module>
		<module>distribution</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<!--We don't actively use log4j, but some extra insurance against the vulnerability... -->
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>2.20.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>2.20.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-to-slf4j</artifactId>
				<version>2.20.0</version>
			</dependency>

			<!-- License: Apache 2.0 -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Hoxton.SR10</version> <!-- compatible with spring-boot 2.0.x -->
				<!-- <version>Greenwich.RELEASE</version> --> <!-- compatible with spring-boot 2.1.x -->
				<type>pom</type>
				<scope>import</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<!--<version>2.13</version> -->
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<useReleaseProfile>false</useReleaseProfile>
					<releaseProfiles>release</releaseProfiles>
					<goals>deploy</goals>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
