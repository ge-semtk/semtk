#
# This file specifies configurations for integration tests. 
#

integrationtest.protocol=${SERVICE_PROTOCOL}
integrationtest.dispatcherclassname=${DISPATCHER_CLASS_NAME}

integrationtest.auth.usernameKey=${AUTH_USERNAME_KEY}
integrationtest.auth.groupKey=${AUTH_GROUP_KEY}
integrationtest.auth.settingsFilePath=${AUTH_SETTINGS_FILE_PATH}
integrationtest.auth.refreshFreqSeconds=${AUTH_REFRES_FREQ_SEC}

integrationtest.testgraph.server=${TESTGRAPH_SERVER_URL}
integrationtest.testgraph.type=${TESTGRAPH_ENDPOINT_TYPE}

# used by all the IT services for their service graph
integrationtest.sparqlendpoint.server=${SERVICES_DATASET_SERVER_URL}
integrationtest.sparqlendpoint.type=${SERVICES_DATASET_ENDPOINT_TYPE}
integrationtest.sparqlendpoint.username=${SPARQLQUERY_SERVICE_USER}
integrationtest.sparqlendpoint.password=${SPARQLQUERY_SERVICE_PWD}
	
integrationtest.services.graph=${SERVICES_DATASET}

# ingestion service
integrationtest.ingestionservice.server=${INGESTION_SERVICE_HOST}
integrationtest.ingestionservice.port=${PORT_INGESTION_SERVICE}	
	
# oinfo service
integrationtest.ontologyinfoservice.server=${ONTOLOGYINFO_SERVICE_HOST}
integrationtest.ontologyinfoservice.port=${PORT_ONTOLOGYINFO_SERVICE}

# status service
integrationtest.statusservice.server=${STATUS_SERVICE_HOST}
integrationtest.statusservice.port=${PORT_SPARQLGRAPH_STATUS_SERVICE}

# results service
integrationtest.resultsservice.server=${RESULTS_SERVICE_HOST}
integrationtest.resultsservice.port=${PORT_SPARQLGRAPH_RESULTS_SERVICE}
integrationtest.resultsservice.fileLocation=${resultsFileLocation}
integrationtest.resultsservice.additionalFileLocations=${resultsAdditionalFileLocations}

# SPARQL query service
integrationtest.sparqlqueryservice.server=${SPARQLQUERY_SERVICE_HOST}
integrationtest.sparqlqueryservice.port=${PORT_SPARQL_QUERY_SERVICE}

# node group service
integrationtest.nodegroupservice.server=${NODEGROUP_SERVICE_HOST}
integrationtest.nodegroupservice.port=${PORT_NODEGROUP_SERVICE}

# node group store service
integrationtest.nodegroupstoreservice.server=${NODEGROUPSTORE_SERVICE_HOST}
integrationtest.nodegroupstoreservice.port=${PORT_NODEGROUPSTORE_SERVICE}

# node group execution service
integrationtest.nodegroupexecution.server=${NODEGROUPEXECUTION_SERVICE_HOST}
integrationtest.nodegroupexecution.port=${PORT_NODEGROUPEXECUTION_SERVICE}

# dispatch service
integrationtest.dispatchservice.server=${DISPATCH_SERVICE_HOST}
integrationtest.dispatchservice.port=${PORT_DISPATCH_SERVICE}

# neptune upload
integrationtest.neptuneupload.s3ClientRegion=${NEPTUNE_UPLOAD_S3_CLIENT_REGION}
integrationtest.neptuneupload.s3BucketName=${NEPTUNE_UPLOAD_S3_BUCKET_NAME}
integrationtest.neptuneupload.awsIamRoleArn=${NEPTUNE_UPLOAD_S3_AWS_IAM_ROLE_ARN}

# fdcsample
integrationtest.fdcsampleservice.port=${PORT_FDCSAMPLE_SERVICE}
integrationtest.fdcsampleservice.server=${FDCSAMPLE_SERVICE_HOST}

# edc query gen service
integrationtest.edcquerygenservice.server=${EDCQUERYGEN_SERVICE_HOST}
integrationtest.edcquerygenservice.port=${PORT_EDCQUERYGEN_SERVICE}

# hive service
integrationtest.hiveservice.server=${HIVE_SERVICE_HOST}
integrationtest.hiveservice.port=${PORT_HIVE_SERVICE}

# athena service
integrationtest.athenaservice.server=${ATHENA_SERVICE_HOST}
integrationtest.athenaservice.port=${PORT_ATHENA_SERVICE}
# Athena
integrationtest.athena.database=${ATHENA_TEST_DATABASE}

# binary file query gen service
integrationtest.binaryfileservice.server=${BINARYFILE_SERVICE_HOST}
integrationtest.binaryfileservice.port=${PORT_BINARYFILE_SERVICE}  

# file staging service
integrationtest.filestaging.server=${FILESTAGING_SERVICE_HOST}
integrationtest.filestaging.port=${PORT_FILESTAGING_SERVICE}

# Hive
integrationtest.hive.server=${HIVE_TEST_SERVER}
integrationtest.hive.port=${HIVE_TEST_PORT}
integrationtest.hive.database=${HIVE_TEST_DATABASE}
integrationtest.hive.username=${HIVE_TEST_USERNAME}
integrationtest.hive.password=${HIVE_TEST_PASSWORD}

# logging service
integrationtest.loggingservice.server=${LOGGING_SERVICE_HOST}
integrationtest.loggingservice.port=${LOGGING_SERVICE_PORT}
integrationtest.loggingservice.endpoint=${LOGGING_SERVICE_ENDPOINT}

# binary hdfs download service (bigdatatk)
integrationtest.binaryhdfsdownloadservice.server=${BINARY_HDFS_DOWNLOAD_SERVICE_HOST}

#KairosDB
integrationtest.kairosdbservice.server=${KAIROS_TEST_SERVER}
integrationtest.kairosdbservice.port=${KAIROS_TEST_PORT}
integrationtest.kairosdb.url=${KAIROS_TEST_URL}

